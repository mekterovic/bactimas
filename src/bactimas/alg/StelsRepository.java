package bactimas.alg;

import java.util.HashMap;



public class StelsRepository {

//	public static int[][] getStelForRadius(int ballRadius) {
//		if (ballRadius == 1) {
//			return stel31;
//		} else if (ballRadius == 2) {
//			return stel51;
//		} else if (ballRadius == 3) {
//			return stel71;
//		} else if (ballRadius == 4) {
//			return stel91;
//		} else if (ballRadius == 5) {
//			return stel111;
//		} else {
//			Log.error("Unsupported ballRadius size=" + ballRadius);
//			return null;
//		}
//	}
	
	private static HashMap<Integer, int[][]> repo = new  HashMap<Integer, int[][]>();
	
	private static void compare (int[][] stel1, int[][] stel2) {
		System.out.println("\nComparing stels of size:" + stel1.length);
		for (int i = 0; i < stel1.length; ++i) {
			for (int j = 0; j < stel1.length; ++j) {
				if (stel1[i][j] != stel2[i][j])	
					System.out.print("\ndiff at " + i + ", " + j + " stel1=" + stel1[i][j] + " stel2 = " + stel2[i][j]);
			}			
		}		
	}
	public static int[][] getStelForRadius (int ballRadius) {
		if (repo.keySet().contains(ballRadius)) return repo.get(ballRadius);
		
		int stel[][] = new int [ballRadius * 2 + 1][ballRadius * 2 + 1];
		for (int i = 0; i < ballRadius * 2 + 1; ++i) {
			for (int j = 0; j < ballRadius * 2 + 1; ++j) {
				int dist = (int) Math.round(Math.sqrt(Math.pow(ballRadius - i, 2) + Math.pow(ballRadius - j, 2)));
				stel[i][j] =  (dist == ballRadius) ? 1 : (dist < ballRadius) ? -1 : 0;
			}
		}	
		// fix  "thick" borders eg 0 1 1 -1 -1 1 1 0
		for (int i = 1; i < ballRadius * 2 ; ++i) {
			int start, end;
			start = 0; 
			while (stel[i][start] != 1) ++start;
			end = ballRadius * 2;
			while (stel[i][end] != 1) --end;			
			for (int j = start+1; j < end; ++j) {		
				stel[i][j] =-1;				
			}			
		}	
		repo.put(ballRadius, stel);
		return stel;
	}	
	private static int[][] getStelForRadius2 (int ballRadius) {
		int stel[][] = new int [ballRadius * 2 + 1][ballRadius * 2 + 1];
		
		for (int i = 0; i < ballRadius * 2 + 1; ++i) {
			for (int j = 0; j < ballRadius * 2 + 1; ++j) {
				double dist = Math.sqrt(Math.pow(ballRadius - i, 2) + Math.pow(ballRadius - j, 2));
				System.out.print(dist + "  ");
			}
			System.out.println("");
		}
		
		System.out.println("\n");
		
		for (int i = 0; i < ballRadius * 2 + 1; ++i) {
			for (int j = 0; j < ballRadius * 2 + 1; ++j) {
				int dist = (int) Math.round(Math.sqrt(Math.pow(ballRadius - i, 2) + Math.pow(ballRadius - j, 2)));
				stel[i][j] =  (dist == ballRadius) ? 1 : (dist < ballRadius) ? -1 : 0;
				
				if (dist == ballRadius) System.out.print(" 1");
				else if (dist < ballRadius) System.out.print("-1");
				else System.out.print(" 0");
			}
			System.out.println("");
		}
		for (int i = 0; i <= ballRadius * 2 ; ++i) {
			for (int j = 0; j <= ballRadius * 2; ++j) {				
				if (stel[i][j] == 1) System.out.print("*");
				else System.out.print(" ");
			}
			System.out.println("");
		}	
		// fix  "thick" borders eg 0 1 1 -1 -1 1 1 0
		for (int i = 1; i < ballRadius * 2 ; ++i) {
			int start, end;
			start = 0; 
			while (stel[i][start] != 1) ++start;
			end = ballRadius * 2;
			while (stel[i][end] != 1) --end;			
			for (int j = start+1; j < end; ++j) {		
				stel[i][j] =-1;				
			}			
		}		
		for (int i = 0; i <= ballRadius * 2 ; ++i) {
			for (int j = 0; j <= ballRadius * 2; ++j) {				
				if (stel[i][j] == 1) System.out.print("*");
				else System.out.print(" ");
			}
			System.out.println("");
		}	
		return stel;
	}

	
    public static void main(String[] args) {
        //Schedule a job for the event-dispatching thread:
        //creating and showing this application's GUI.
    	for (int i=1; i < 10; ++i){
    		System.out.println("Stel for r = " + i);
    		getStelForRadius2(i);
    	}
		compare( stel31, getStelForRadius(1));
		compare( stel51, getStelForRadius(2));
		compare( stel71, getStelForRadius(3));
		compare( stel91, getStelForRadius(4));
		compare( stel111, getStelForRadius(5));
		    	
    }		
	
	
	protected static int stel31[][] = new int [][] {
		{0,  1,  0},		
		{1, -4,  1},		
		{0,  1,  0}	
	};	
	protected static int stel51[][] = new int [][] {
		{0,  1,  1,  1,  0},		
		{1, -1, -1, -1,  1},		
		{1, -1, -1, -1,  1},
		{1, -1, -1, -1,  1},		
		{0,  1,  1,  1,  0}	
	};	
		
	
	protected static int stel71[][] = new int [][] {
		{0,  0,  1,  1,  1,  0,  0},		
		{0,  1, -1, -1, -1,  1,  0},
		{1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1,  1},
		{0,  1, -1, -1, -1,  1,  0},		
		{0,  0,  1,  1,  1,  0,  0}	
	};	
	protected static int stel91[][] = new int [][] {
		{0,  0,  1,  1,  1,  1,  1,  0,  0},		
		{0,  1, -1, -1, -1, -1, -1,  1,  0},
		{1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1,  1},
		{0,  1, -1, -1, -1, -1, -1,  1,  0},		
		{0,  0,  1,  1,  1,  1,  1,  0,  0}	
	};
	
	protected static int stel111[][] = new int [][] {
		{0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0},		
		{0,  1, -1, -1, -1, -1, -1, -1, -1,  1,  0},
		{1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  1},
		{0,  1, -1, -1, -1, -1, -1, -1, -1,  1,  0},		
		{0,  0,  1,  1,  1,  1,  1,  1,  1,  0,  0}	
	};	
	
	protected static int _stel11[][] = new int [][] {
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
		{0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0},
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1},
		{0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0},
		{0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0},
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0}	
	};
	protected static int _stel11b[][] = new int [][] {
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
		{0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},
		{0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0},
		{0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0}	
	};

	

	protected static int stel9119[][] = new int [][] {
		{0,  0,  1,  1,  1,  1,  1,  0,  0},		
		{0,  1, -1, -1, -1, -1, -1,  1,  0},
		{1, -1, -1, -1, -1, -1, -1, -1,  1},
		{1, -1, -1, -9, -9, -9, -1, -1,  1},
		{1, -1, -1, -9, -9, -9, -1, -1,  1},
		{1, -1, -1, -9, -9, -9, -1, -1,  1},
		{1, -1, -1, -1, -1, -1, -1, -1,  1},
		{0,  1, -1, -1, -1, -1, -1,  1,  0},		
		{0,  0,  1,  1,  1,  1,  1,  0,  0}	
	};	
	protected static int stel912[][] = new int [][] {
		{0,  0,  1,  1,  1,  1,  1,  0,  0},		    
		{0,  1, -2, -2, -2, -2, -2,  1,  0},        
		{1, -2, -2, -2, -2, -2, -2, -2,  1},        
		{1, -2, -2, -2, -2, -2, -2, -2,  1},        
		{1, -2, -2, -2, -2, -2, -2, -2,  1},        
		{1, -2, -2, -2, -2, -2, -2, -2,  1},        
		{1, -2, -2, -2, -2, -2, -2, -2,  1},        
		{0,  1, -2, -2, -2, -2, -2,  1,  0},		    
		{0,  0,  1,  1,  1,  1,  1,  0,  0}	        
	};  
	protected static int _stel92200[][] = new int [][] {
		{  0,    0,  2,    2,   2,   2,   2,   0,  0},		    
		{  0,    2, -10, -10, -10, -10, -10,   2,  0},        
		{  2,  -10,   0,   0,   0,   0,   0, -10,  2},        
		{  2,  -10,   0,   0,   0,   0,   0, -10,  2},        
		{  2,  -10,   0,   0,   0,   0,   0, -10,  2},        
		{  2,  -10,   0,   0,   0,   0,   0, -10,  2},        
		{  2,  -10,   0,   0,   0,   0,   0, -10,  2},        
		{  0,    2, -10, -10, -10, -10, -10,   2,  0},		    
		{  0,    0,  2,    2,   2,   2,   2,   0,  0}	        
	};	
	protected static int stel902[][] = new int [][] {
		{0,  0,  0,  0,  0,  0,  0,  0,  0},		    
		{0,  0, -2, -2, -2, -2, -2,  0,  0},        
		{0, -2, -2, -2, -2, -2, -2, -2,  0},        
		{0, -2, -2, -2, -2, -2, -2, -2,  0},        
		{0, -2, -2, -2, -2, -2, -2, -2,  0},        
		{0, -2, -2, -2, -2, -2, -2, -2,  0},        
		{0, -2, -2, -2, -2, -2, -2, -2,  0},        
		{0,  0, -2, -2, -2, -2, -2,  0,  0},		    
		{0,  0,  0,  0,  0,  0,  0,  0,  0}	        
	}; 
	protected static int stel9012[][] = new int [][] {
		{0,  0,  0,  0,  0,  0,  0,  0,  0},		    
		{0,  0, -1, -1, -1, -1, -1,  0,  0},        
		{0, -1, -2, -2, -2, -2, -2, -1,  0},        
		{0, -1, -2, -2, -2, -2, -2, -1,  0},        
		{0, -1, -2, -2, -2, -2, -2, -1,  0},        
		{0, -1, -2, -2, -2, -2, -2, -1,  0},        
		{0, -1, -2, -2, -2, -2, -2, -1,  0},        
		{0,  0, -1, -1, -1, -1, -1,  0,  0},		    
		{0,  0,  0,  0,  0,  0,  0,  0,  0}	        
	}; 	
	protected static int stel9020[][] = new int [][] {
		{0,  0,  0,  0,  0,  0,  0,  0,  0},		    
		{0,  0, -2, -2, -2, -2, -2,  0,  0},        
		{0, -2, -0, -0, -0, -0, -0, -2,  0},        
		{0, -2, -0, -0, -0, -0, -0, -2,  0},        
		{0, -2, -0, -0, -0, -0, -0, -2,  0},        
		{0, -2, -0, -0, -0, -0, -0, -2,  0},        
		{0, -2, -0, -0, -0, -0, -0, -2,  0},        
		{0,  0, -2, -2, -2, -2, -2,  0,  0},		    
		{0,  0,  0,  0,  0,  0,  0,  0,  0}	        
	}; 	
	
	protected static int stel9010[][] = new int [][] {
		{0,  0,  0,  0,  0,  0,  0,  0,  0},		    
		{0,  0, -10, -10, -10, -10, -10,  0,  0},        
		{0, -10, -10, -10, -10, -10, -10, -10,  0},        
		{0, -10, -10, -10, -10, -10, -10, -10,  0},        
		{0, -10, -10, -10, -10, -10, -10, -10,  0},        
		{0, -10, -10, -10, -10, -10, -10, -10,  0},        
		{0, -10, -10, -10, -10, -10, -10, -10,  0},        
		{0,  0, -10, -10, -10, -10, -10,  0,  0},		    
		{0,  0,  0,  0,  0,  0,  0,  0,  0}	        
	}; 	
	protected static int stel92[][] = new int [][] {
		{0,  0,  2,  2,  2,  2,  2,  0,  0},		
		{0,  2, -1, -1, -1, -1, -1,  2,  0},
		{2, -1, -1, -1, -1, -1, -1, -1,  2},
		{2, -1, -1, -1, -1, -1, -1, -1,  2},
		{2, -1, -1, -1, -1, -1, -1, -1,  2},
		{2, -1, -1, -1, -1, -1, -1, -1,  2},
		{2, -1, -1, -1, -1, -1, -1, -1,  2},
		{0,  2, -1, -1, -1, -1, -1,  2,  0},		
		{0,  0,  2,  2,  2,  2,  2,  0,  0}	
	};		
	protected static int stel93[][] = new int [][] {
		{0,  0,  3,  3,  3,  3,  3,  0,  0},		
		{0,  3, -1, -1, -1, -1, -1,  3,  0},
		{3, -1, -1, -1, -1, -1, -1, -1,  3},
		{3, -1, -1, -1, -1, -1, -1, -1,  3},
		{3, -1, -1, -1, -1, -1, -1, -1,  3},
		{3, -1, -1, -1, -1, -1, -1, -1,  3},
		{3, -1, -1, -1, -1, -1, -1, -1,  3},
		{0,  3, -1, -1, -1, -1, -1,  3,  0},		
		{0,  0,  3,  3,  3,  3,  3,  0,  0}	
	};	
	protected static int stel94[][] = new int [][] {
		{0,  0,  4,  4,  4,  4,  4,  0,  0},		
		{0,  4, -1, -1, -1, -1, -1,  4,  0},
		{4, -1, -1, -1, -1, -1, -1, -1,  4},
		{4, -1, -1, -1, -1, -1, -1, -1,  4},
		{4, -1, -1, -1, -1, -1, -1, -1,  4},
		{4, -1, -1, -1, -1, -1, -1, -1,  4},
		{4, -1, -1, -1, -1, -1, -1, -1,  4},
		{0,  4, -1, -1, -1, -1, -1,  4,  0},		
		{0,  0,  4,  4,  4,  4,  4,  0,  0}	
	};		
	protected static int stel95[][] = new int [][] {
		{0,  0,  5,  5,  5,  5,  5,  0,  0},		
		{0,  5, -1, -1, -1, -1, -1,  5,  0},
		{5, -1, -1, -1, -1, -1, -1, -1,  5},
		{5, -1, -1, -1, -1, -1, -1, -1,  5},
		{5, -1, -1, -1, -1, -1, -1, -1,  5},
		{5, -1, -1, -1, -1, -1, -1, -1,  5},
		{5, -1, -1, -1, -1, -1, -1, -1,  5},
		{0,  5, -1, -1, -1, -1, -1,  5,  0},		
		{0,  0,  5,  5,  5,  5,  5,  0,  0}	
	};		
//	protected static int stel9empty[][] = new int [][] {
//		{0, 0, 1, 1, 1, 1, 1, 0, 0},		
//		{0, 1, 0, 0, 0, 0, 0, 1, 0},
//		{1, 0, 0, 0, 0, 0, 0, 0, 1},
//		{1, 0, 0, 0, 0, 0, 0, 0, 1},
//		{1, 0, 0, 0, 0, 0, 0, 0, 1},
//		{1, 0, 0, 0, 0, 0, 0, 0, 1},
//		{1, 0, 0, 0, 0, 0, 0, 0, 1},
//		{0, 1, 0, 0, 0, 0, 0, 1, 0},		
//		{0, 0, 1, 1, 1, 1, 1, 0, 0}	
//	};
	protected static int stel9f[][] = new int [][] {
		{0, 0, 1, 1, 1, 1, 1, 0, 0},		
		{0, 1, 1, 1, 1, 1, 1, 1, 0},
		{1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1},
		{1, 1, 1, 1, 1, 1, 1, 1, 1},
		{0, 1, 1, 1, 1, 1, 1, 1, 0},		
		{0, 0, 1, 1, 1, 1, 1, 0, 0}	
	};	
	

	
	
		
	
	protected static int stel7f[][] = new int [][] {
		{0,  1,  1,  1,  1,  1, 0},			
		{1,  1,  1,  1,  1,  1, 1},
		{1,  1,  1,  1,  1,  1, 1},
		{1,  1,  1,  1,  1,  1, 1},
		{1,  1,  1,  1,  1,  1, 1},
		{1,  1,  1,  1,  1,  1, 1},
		{0,  1,  1,  1,  1,  1, 0}	
	};	
	protected static int stel702[][] = new int [][] {
		{0,  0,  0,  0,  0,  0, 0},			
		{0,  0, -2, -2, -2,  0, 0},
		{0, -2, -2, -2, -2, -2, 0},
		{0, -2, -2, -2, -2, -2, 0},
		{0, -2, -2, -2, -2, -2, 0},
		{0,  0, -2, -2, -2,  0, 0},
		{0,  0,  0,  0,  0,  0, 0}	
	};	
//	protected static int stel71[][] = new int [][] {
//		{0,  0,  1,  1,  1,  0, 0},			
//		{0,  1, -1, -1, -1,  1, 0},
//		{1, -1, -1, -1, -1, -1, 1},
//		{1, -1, -1, -1, -1, -1, 1},
//		{1, -1, -1, -1, -1, -1, 1},
//		{0,  1, -1, -1, -1,  1, 0},
//		{0,  0,  1,  1,  1,  0, 0}	
//	};	

	protected static int stel72[][] = new int [][] {
		{0,  0,  2,  2,  2,  0, 0},			
		{0,  2, -1, -1, -1,  2, 0},
		{2, -1, -1, -1, -1, -1, 2},
		{2, -1, -1, -1, -1, -1, 2},
		{2, -1, -1, -1, -1, -1, 2},
		{0,  2, -1, -1, -1,  2, 0},
		{0,  0,  2,  2,  2,  0, 0}	
	};	
	protected static int stel73[][] = new int [][] {
		{0,  0,  3,  3,  3,  0, 0},			
		{0,  3, -1, -1, -1,  3, 0},
		{3, -1, -1, -1, -1, -1, 3},
		{3, -1, -1, -1, -1, -1, 3},
		{3, -1, -1, -1, -1, -1, 3},
		{0,  3, -1, -1, -1,  3, 0},
		{0,  0,  3,  3,  3,  0, 0}	
	};	
	protected static int stel74[][] = new int [][] {
		{0,  0,  4,  4,  4,  0, 0},			
		{0,  4, -1, -1, -1,  4, 0},
		{4, -1, -1, -1, -1, -1, 4},
		{4, -1, -1, -1, -1, -1, 4},
		{4, -1, -1, -1, -1, -1, 4},
		{0,  4, -1, -1, -1,  4, 0},
		{0,  0,  4,  4,  4,  0, 0}	
	};
	protected static int stel75[][] = new int [][] {
		{0,  0,  5,  5,  5,  0, 0},			
		{0,  5, -1, -1, -1,  5, 0},
		{5, -1, -1, -1, -1, -1, 5},
		{5, -1, -1, -1, -1, -1, 5},
		{5, -1, -1, -1, -1, -1, 5},
		{0,  5, -1, -1, -1,  5, 0},
		{0,  0,  5,  5,  5,  0, 0}	
	};		
	
	protected static int stel7bf[][] = new int [][] {
		{0,  0,  1,  1,  1,  0, 0},			
		{0,  1,  1,  1,  1,  1, 0},
		{1,  1,  1,  1,  1,  1, 1},
		{1,  1,  1,  1,  1,  1, 1},
		{1,  1,  1,  1,  1,  1, 1},
		{0,  1,  1,  1,  1,  1, 0},
		{0,  0,  1,  1,  1,  0, 0}	
	};	
}
